<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>HarmonyOS on MLOG</title><link>https://qfsyso.github.io/tags/harmonyos/</link><description>Recent content in HarmonyOS on MLOG</description><generator>Hugo -- 0.126.3</generator><language>zh-CN</language><lastBuildDate>Tue, 09 Sep 2025 01:18:48 +0800</lastBuildDate><atom:link href="https://qfsyso.github.io/tags/harmonyos/index.xml" rel="self" type="application/rss+xml"/><item><title>HarmonyOS TaskApp</title><link>https://qfsyso.github.io/posts/harmonyos-taskapp/</link><pubDate>Tue, 09 Sep 2025 01:18:48 +0800</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-taskapp/</guid><description>目录结构 📁 项目结构
entry/src/main/ets/ ├── interface/ │ └── TaskDataInterface.ets # 类型接口定义 ├── model/ │ └── TaskModel.ets # 任务数据模型 ├── service/ │ ├── TaskService.ets # 任务业务逻辑 │ ├── StorageService.ets # 本地存储服务 │ └── DataManager.ets # 数据管理器 ├── utils/ │ └── StorageUtils.ets # 存储工具类 └── pages/ ├── Index.ets # 应用入口 ├── MainPage.ets # 主页面 ├── TaskListPage.ets # 任务列表 ├── AddTaskPage.ets # 添加任务 └── EditTaskPage.ets # 编辑任务 🔧 技术特性 开发平台: HarmonyOS 5.0.5 (API 17) 开发语言: ArkTS 架构模式: MVC + 服务层 类型安全: 完整的TypeScript类型定义 数据存储: HarmonyOS Preferences API UI框架: ArkUI 初始版本 ✅ 时间任务管理: 创建和管理基于时间的任务 ✅ 存钱任务管理: 创建和管理存钱目标任务 ✅ 进度跟踪: 实时计算和显示任务进度 ✅ 状态管理: 自动判断任务状态（进行中/已完成/已过期） ✅ 用户界面: 现代化的Material Design风格界面 ✅ 导航系统: 底部导航栏，分离列表和添加功能 ✅ 任务操作: 完整的增删改查功能 ✅ 响应式设计: 适配不同屏幕尺寸</description></item><item><title>HarmonyOS SDK17 Timer</title><link>https://qfsyso.github.io/posts/harmonyos-sdk17-timer/</link><pubDate>Sun, 07 Sep 2025 11:22:11 +0800</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-sdk17-timer/</guid><description>targetSdkVersion HarmonyOS 5.0.5(API 17)
Timer @Entry @Component struct Index { @State currentTime: string = &amp;#39;&amp;#39;; @State minutes: number = 0; @State seconds: number = 0; @State totalSeconds: number = 0; @State remainingSeconds: number = 0; @State isRunning: boolean = false; @State isPaused: boolean = false; @State isFinished: boolean = false; private timer: number = -1; private clockTimer: number = -1; aboutToAppear() { this.updateCurrentTime(); this.clockTimer = setInterval(() =&amp;gt; { this.updateCurrentTime(); }, 1000); } aboutToDisappear() { if (this.</description></item><item><title>HarmonyOS Run</title><link>https://qfsyso.github.io/posts/harmonyos-run/</link><pubDate>Tue, 27 May 2025 00:58:49 +0800</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-run/</guid><description>HarmonyOS5.0真机调试 1.开发者选线打开 类似安卓点击版本 软件版本 5次开启 重启
2.设置-系统-开发者-USB调试 连上 DevEco对即可调试
uniapp HarmonyOS 真机调试 小三角 运行 运行到鸿蒙
申请证书 尚未完成开发者注册 数字证书是由华为的 AppGallery Connect 服务系统（简称 AGC）颁发的，开发者首先需要在 AGC 中完成开发者注册，才能申请数字证书。
未找到包名为 xx 的应用 登录 AGC 之后，进入【证书、APP ID 和 Profile】中的【APP ID】页面，为指定的包名创建应用，然后才能为该应用申请证书。 https://uniapp.dcloud.net.cn/tutorial/harmony/runbuild.html#signing-configs
https://developer.huawei.com/consumer/cn/service/josp/agc/index.html#/
等待插件下载 等待编译页面 .hap
如果没问题，就可以运行到真机了 注意：证书，云关联
注意 性能和包体积，均不及发行模式
鸿蒙整体处于发展初期，能用，有坑，大部分坑有规避方案。 但开发者应建议其领导、客户、质量部门降低期望，不能严格比照Android和iOS的验收标准要求鸿蒙。
Setup APK 安装apk 传文件得到.apk.1 改名apk 桌易通传文件 识别安装
学堂 https://developer.huawei.com/consumer/cn/training/
社区问答 https://developer.huawei.com/consumer/cn/forum/
flutter 当前可以通过flutter create/biuld去生成对应的ohos工程，flutter的代码通过引擎编译后会生成可运行的鸿蒙工程。 参考链接：https://gitee.com/openharmony-sig/flutter_flutter/tree/dev/ 可以直接打包,并集成到项目中。 可以通过flutter build har指令打包成har包，将har作为模块，集成到项目中。 har包使用方法参考：https://developer.huawei.com/consumer/cn/doc/harmonyos-guides-V13/har-package-V13?catalogVersion=V13
RN 4 HM https://gitee.com/openharmony-sig/ohos_react_native/blob/0.72.5-ohos-5.0-release/docs/zh-cn/%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA.md
HarmonyOS 支持机型 https://consumer.</description></item><item><title>HarmonyOS Next Waste Sorting</title><link>https://qfsyso.github.io/posts/harmonyos-next-waste-sorting/</link><pubDate>Sun, 15 Dec 2024 15:33:54 +0000</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-next-waste-sorting/</guid><description>环境 DevEco Studio NEXT Beta1 Build Version: 5.0 API 13
Waste Sorting 垃圾分类
算法 //springCurve回弹 animateToImmediately({ duration:800, curve: curves.springCurve(0, 20, 90, 20), // 其他配置 }); 初始偏移量、振幅、周期和阻尼系数，通过这些参数可以控制动画的弹性效果
//Fisher-Yates洗牌 shuffleItems() { for (let i = this.garbageItems.length - 1; i &amp;gt; 0; i--) { const j = Math.floor(Math.random() * (i + 1)); let temp = this.garbageItems[i]; this.garbageItems[i] = this.garbageItems[j]; this.garbageItems[j] = temp; } } 代码 import { curves } from &amp;#39;@kit.ArkUI&amp;#39;; // 导入ArkUI工具包中的曲线模块 // 定义垃圾项目类 class GarbageItem { name: string; // 垃圾名称 type: number; // 垃圾类型 description?</description></item><item><title>HarmonyOS应用开发者初级认证题目(2024.11新版，题目&amp;答案)</title><link>https://qfsyso.github.io/posts/harmonyos%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E8%80%85%E5%88%9D%E7%BA%A7%E8%AE%A4%E8%AF%81%E9%A2%98%E7%9B%AE2024.11%E6%96%B0%E7%89%88%E9%A2%98%E7%9B%AE%E7%AD%94%E6%A1%88/</link><pubDate>Thu, 31 Oct 2024 00:36:03 +0000</pubDate><guid>https://qfsyso.github.io/posts/harmonyos%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91%E8%80%85%E5%88%9D%E7%BA%A7%E8%AE%A4%E8%AF%81%E9%A2%98%E7%9B%AE2024.11%E6%96%B0%E7%89%88%E9%A2%98%E7%9B%AE%E7%AD%94%E6%A1%88/</guid><description>HarmonyOS应用开发者认证题目(2024.11新版，题目&amp;amp;答案)
c1 about
判断题
1.“一次开发，多端部署”指的是一个工程，一次开发上架，多端按需部署。为了实现这一目的，HarmonyOS提供了多端开发环境，多端开发能力以及多端分发机制。
正确(True)
2.《鸿蒙生态应用开发白皮书》全面阐释了鸿蒙生态下应用开发核心理念、关键能力以及创新体验，旨在帮助开发者快速、准确、全面的了解鸿蒙开发套件给开发者提供的能力全景和未来的愿景。
正确(True)
3.HUAWEI DevEco Studio是面向HarmonyOS生态的集成开发环境，提供了一站式的HarmonyOS生态应用开发能力。
正确(True)
单选题
1.当用户希望能够在多个设备间来回切换、完成多个任务，开发者可以使用以下哪个核心能力，以便应用不间断地给用户提供服务的能力。
C. 自由流转
2.当您希望获取到最全面、最详细的功能描述、参数说明和权限信息时，应该从（）寻找？
C. API参考
3.应用如需在多个设备上运行，需要适配不同的屏幕尺寸和分辨率、不同的交互方式（如触摸和键盘等）、不同的硬件能力（如内存差异和器件差异等），开发成本较高。“一次开发，多端部署”提供了哪个核心能力降低了多设备应用的开发成本？
B. 多端开发能力
4.如果开发者在原生应用版本的基础上，想要提供多种服务给用户，开发者选择开发场景的最优选是？
B. 开发多个元服务，按需组合为一个复杂的应用
多选题
1.下列哪些选项属于HarmonyOS三大技术理念。
A. 一次开发，多端部署 B. 可分可合，自由流转 C. 统一生态，原生智能
2.用户使用应用的情境发生变化时（例如从室内走到户外、从办公室到车上等），之前使用的设备可能已经不适合继续当前的任务，或者周围有更合适的设备，此时，可以选择使用新的设备来继续当前的任务。以下哪些场景适合使用跨端迁移能力？
A. 在外时手机上编辑邮件，到公司后在2in1设备上继续编辑 B. 在外时手机玩游戏，到家后希望获取更好的视觉体验，在平板上继续玩 C. 在家里智慧屏上看视频，当下需要出门时，可以手机上继续观看 D. 手机视频通话中，到家后家中有智慧屏，可以更沉浸地视频聊天
3.下列哪些说法是正确的。
A. HUAWEI DevEco Studio 提供了设备模拟的能力，解决HarmonyOS生态应用、元服务开发过程中遇到的真机设备不足、无分布式应用调试环境等问题，为开发者提供低成本、易获取的调测验证环境 B. 为了降低性能调优技术难度，HUAWEI DevEco Studio推出了场景化调优工具 DevEco Profiler C. HUAWEI DevEco Studio提供了一系列命令行工具，辅助开发者更高效的管理 SDK 、设备，提升调试、调优的效率 D. HUAWEI DevEco Studio是面向HarmonyOS生态的集成开发环境，提供了一站式的HarmonyOS生态应用开发能力
c2 DevEco Studio
判断题
1.如果代码中涉及到一些网络、数据库、传感器等功能的开发，均可使用预览器进行预览。
错误(False)</description></item><item><title>HarmonyOS Next WorldTime Whack Mole</title><link>https://qfsyso.github.io/posts/harmonyos-next-worldtime-whack-mole/</link><pubDate>Sat, 15 Jun 2024 23:58:57 +0000</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-next-worldtime-whack-mole/</guid><description>HarmonyOS Next WorldTime Whack Mole
HarmonyOS应用 鸿蒙NEXT开发 世界时应用 打地鼠
环境 Windows 11 DevEco Studio 5.0.1 Release Version: 5.0.5.306 HarmonyOS 5.0.1(13) ArkTS ArkUI API 13
WorldTime 世界时应用 实现思路 获取时区信息 更新时间 搜索功能
代码 import { i18n } from &amp;#39;@kit.LocalizationKit&amp;#39; // 导入国际化模块，用于处理多语言 import { inputMethod } from &amp;#39;@kit.IMEKit&amp;#39; // 导入输入法模块 @ObservedV2 // 观察者装饰器，用于观察状态变化 class CityTimeInfo { // 定义城市时间信息类 @Trace cityName: string = &amp;#34;&amp;#34;; // 城市名称，初始为空字符串 @Trace currentTime: string = &amp;#34;&amp;#34;; // 当前时间，初始为空字符串 timeZone: i18n.</description></item><item><title> HarmonyOS Tabs Component</title><link>https://qfsyso.github.io/posts/harmonyos-tabs-component/</link><pubDate>Sat, 01 Jun 2024 23:52:32 +0000</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-tabs-component/</guid><description>🔮Tabs Tabs(){ TabContent(){ } } example
Tabs({barPosition:BarPosition.End}){ ForEach(this.ilist,(item,index)=&amp;gt;{ TabContent(){ Column( ){ Text(item.title) .fontSize(&amp;#39;18fp&amp;#39;) } .width(&amp;#39;100%&amp;#39;) .height(&amp;#39;100%&amp;#39;) .backgroundColor(&amp;#39;#FFFFFF&amp;#39;) } .tabBar(this.tabTile(index,item.title,item.url1,item.url2)) }) } .vertical(false) .scrollable(true)//huadong .animationDuration(400) .width(&amp;#39;100%&amp;#39;) .backgroundColor(&amp;#39;#fffff1&amp;#39;) //.height(&amp;#39;100vp&amp;#39;) .onChange((value) =&amp;gt; { this.curIndex = value; }) 🎮️tab data interface INav{ title:string; url1:Resource; url2 :Resource; } //... @State ilist:INav[]=[{ title:&amp;#39;index&amp;#39;, url1:$r(&amp;#39;app.media.icon&amp;#39;), url2:$r(&amp;#39;app.media.icon2&amp;#39;) }, { title:&amp;#39;hot&amp;#39;, url1:$r(&amp;#39;app.media.icon&amp;#39;), url2:$r(&amp;#39;app.media.icon2&amp;#39;) }, { title:&amp;#39;my&amp;#39;, url1:$r(&amp;#39;app.media.icon&amp;#39;), url2:$r(&amp;#39;app.media.icon2&amp;#39;) } ]; barPosition:BarPosition.End 底部
barPosition:BarPosition.Start 顶部
🪅Component swpier @Component export default struct swiper1{ public ilist:Array&amp;lt;Resource&amp;gt; =[ $r(&amp;#39;app.</description></item><item><title>HarmonyOS socket websocket</title><link>https://qfsyso.github.io/posts/harmonyos-socket-websocket/</link><pubDate>Sun, 26 May 2024 23:56:19 +0000</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-socket-websocket/</guid><description>socket import socket from &amp;#39;@ohos.net.socket&amp;#39;; create
let tcp = socket.constructTCPSocketInstance(); let promise = tcp.connect({ address: {address: &amp;#39;192.168.1.11&amp;#39;, port: 24524, family: 1} , timeout: 6000}); promise.then(() =&amp;gt; { console.log(&amp;#39;connect success&amp;#39;); tcp.send({ data:&amp;#39;Hello, server!&amp;#39; },err =&amp;gt; { if (err) { console.log(&amp;#39;send fail&amp;#39;); return; } console.log(&amp;#39;send success&amp;#39;); }) }).catch(err =&amp;gt; { console.log(&amp;#39;connect fail&amp;#39;); }); ERR 系统识别到新的sdk路径 请清除模拟器数据后 Sdk Path has been changed to xxx
1.在Local Emulator的设备列表窗口，点击“Wipe User Data”清除模拟器数据，然后重新启动模拟器。 2.重新创建一个模拟器，然后启动新建的模拟器。
console.log Log =&amp;gt; show only js log</description></item><item><title>HarmonyOS Interface Router ArkTS ArkUI</title><link>https://qfsyso.github.io/posts/harmonyos-interface-router-arkts-arkui/</link><pubDate>Thu, 23 May 2024 21:49:44 +0000</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-interface-router-arkts-arkui/</guid><description>🎬️create @Component export default struct TitleBar { build(){ Row(){ Text(&amp;#39;transition&amp;#39;) .fontSize(&amp;#39;30fp&amp;#39;) .fontColor(Color.White) } .width(&amp;#39;100%&amp;#39;) .height(&amp;#39;8%&amp;#39;) .backgroundColor(&amp;#39;#4169E1&amp;#39;) .padding({left:10}) } } 🎞️interface export interface IList{ title:string; url :string; } @State listData:IList[]=[ // @State listData:Array&amp;lt;IList&amp;gt;=[ { title:&amp;#39;in&amp;#39;, url:&amp;#39;pages/home1&amp;#39; }, { title:&amp;#39;scale&amp;#39;, url:&amp;#39;pages/home2&amp;#39; }, { title:&amp;#39;small&amp;#39;, url:&amp;#39;pages/home3&amp;#39; }, { title:&amp;#39;in&amp;#39;, url:&amp;#39;&amp;#39; } ] 💡foreach ForEach(this.listData,( item: IList,index?:number)=&amp;gt;{ //listitem Button({type:ButtonType.Capsule}){ Text(item.title) .fontSize(&amp;#39;35fp&amp;#39;) .fontColor(Color.White) } //... }) 🔦router import router from &amp;#39;@ohos.router&amp;#39; 📼mainpage &amp;#34;pages/home1&amp;#34; 📹️onclick .onClick(()=&amp;gt;{ //router router.</description></item><item><title>HarmonyOS Photos Column Swiper Grid</title><link>https://qfsyso.github.io/posts/harmonyos-photos-column-swiper-grid/</link><pubDate>Thu, 16 May 2024 01:26:18 +0000</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-photos-column-swiper-grid/</guid><description>​
✨️index title swiper list(grid)
import coms from &amp;#39;../pages/com&amp;#39; @Entry @Component struct Index { @State message: string = &amp;#39;Hello World1&amp;#39; //private list = new con build() { Column() { //标题 Row(){ Text(&amp;#39;photos&amp;#39;) .fontSize(&amp;#39;30fp&amp;#39;) .fontWeight(FontWeight.Bold) } .justifyContent(FlexAlign.Start) .width(&amp;#39;100%&amp;#39;) .padding(&amp;#39;12vp&amp;#39;) //轮播 Swiper() { ForEach(coms.SWIPERLIST,(item:Resource,index?:Number)=&amp;gt;{ Row() { Image(item) } .width(&amp;#39;100%&amp;#39;) .aspectRatio(1.6) }) } .autoPlay(true) .loop(true) .indicator(true) .duration(1000) .itemSpace(10) .borderRadius(&amp;#39;12vp&amp;#39;) .margin(&amp;#39;12vp&amp;#39;) .onChange((index: number) =&amp;gt; { }) //列表 Grid(){ GridItem(){ Column(){ Image($r(&amp;#39;app.media.icon&amp;#39;)) .borderRadius(2) } } GridItem(){ Column(){ Image($r(&amp;#39;app.</description></item><item><title>HarmonyOS Study ArkTS</title><link>https://qfsyso.github.io/posts/harmonyos-study-arkts/</link><pubDate>Sun, 21 Apr 2024 13:00:43 +0000</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-study-arkts/</guid><description>💡 环境搭建 HarmonyOS开发环境搭建
DevEco Studio安装 https://developer.huawei.com/consumer/cn/deveco-studio/
​
🚀安装nodejs ​
🤵安装ohpm ​
🍔安装SDK ​
​
💥Emulator安装 ​
Q:The graphic card OpenGL version is too old for Previewer to work..
解决方法分两步：
1、下载enGL库：https://github.com/pal1000/mesa-dist-win/releases/download/23.1.1/mesa3d-23.1.1-release-msvc.7z
2、解压下载的zip文件,双击执行systemwidedeploy.cmd文件，然后按任意键，出现一个菜单，选择1，然后开始安装OpenGL驱动，出现complete 后关闭终端，重新运行程序即可生效。
🌶️新建ArkTs项目 ​
​
​
entry：HarmonyOS工程模块，编译构建生成一个HAP包。
src &amp;gt; main &amp;gt; ets：用于存放ets源码。 src &amp;gt; main &amp;gt; ets &amp;gt; MainAbility：应用/服务的入口。 src &amp;gt; main &amp;gt; ets &amp;gt; MainAbility &amp;gt; pages：MainAbility包含的页面。 src &amp;gt; main &amp;gt; ets &amp;gt; MainAbility &amp;gt; pages &amp;gt; index.ets：pages列表中的第一个页面，即应用的首页入口。 src &amp;gt; main &amp;gt; ets &amp;gt; MainAbility &amp;gt; app.</description></item></channel></rss>