<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Typescript on MLOG</title><link>https://qfsyso.github.io/tags/typescript/</link><description>Recent content in Typescript on MLOG</description><generator>Hugo -- 0.126.3</generator><language>zh-CN</language><lastBuildDate>Mon, 20 May 2024 00:07:45 +0000</lastBuildDate><atom:link href="https://qfsyso.github.io/tags/typescript/index.xml" rel="self" type="application/rss+xml"/><item><title>Typescript study</title><link>https://qfsyso.github.io/posts/typescript-study/</link><pubDate>Mon, 20 May 2024 00:07:45 +0000</pubDate><guid>https://qfsyso.github.io/posts/typescript-study/</guid><description>typescript ≈ javascript plus
🔗setup npm install typescript -g tsc -version npm install ts-node -g 🖌️hello world let str = &amp;#34;hi&amp;#34; console.log(str); ts-node t.ts 🖋️datatype let a1 :string =&amp;#39;abc&amp;#39; let a2:number = 2 let a3 :boolean =true let nu:null =null let un:undefined = undefined let a4:string|null = null let a5:1|2|3 = 2 any let a:any a= 1 a=&amp;#34;1&amp;#34; a=true strong type
let a:string = &amp;#34;123&amp;#34; a=1 Err
let a:unknown a= 1 a=&amp;#34;1&amp;#34; a=true let b :String if(typeof a ==&amp;#34;string&amp;#34;) { b=a } enum 枚举 enum Color { RED,BLUE,BLACK} let color = Color.</description></item></channel></rss>