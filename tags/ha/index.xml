<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>HA on MLOG</title><link>https://qfsyso.github.io/tags/ha/</link><description>Recent content in HA on MLOG</description><generator>Hugo -- 0.126.3</generator><language>zh-CN</language><lastBuildDate>Sun, 25 May 2025 13:07:23 +0800</lastBuildDate><atom:link href="https://qfsyso.github.io/tags/ha/index.xml" rel="self" type="application/rss+xml"/><item><title>NodeRed Test YTB Change NetWrok</title><link>https://qfsyso.github.io/posts/nodered-test-ytb-change-netwrok/</link><pubDate>Sun, 25 May 2025 13:07:23 +0800</pubDate><guid>https://qfsyso.github.io/posts/nodered-test-ytb-change-netwrok/</guid><description>Setup Node-RED 一、前提条件：安装 Node.js Node-RED 需要 Node.js 环境，需先安装 Node.js。
打开 Node.js 官网：https://nodejs.org/ 下载并安装 LTS（长期支持）版本 安装完成后打开终端（Win + X → 终端），输入以下命令检查是否安装成功： node -v npm -v 二、全局安装 Node-RED 在命令行中执行以下命令安装 Node-RED：
npm install -g --unsafe-perm node-red 说明：
-g：表示全局安装 --unsafe-perm：解决某些系统中权限问题 三、启动 Node-RED 安装完成后，在终端中运行：
node-red 输出类似以下内容：
Server now running at http://127.0.0.1:1880/ 四、访问 Node-RED 编辑器 打开浏览器访问：
http://localhost:1880 即可进入图形化流程编辑界面。
🛠️ 五、可选：创建桌面快捷方式（.bat 启动脚本） 创建一个文本文件，内容如下：
@echo off title Node-RED node-red pause 保存为 node-red.bat
双击即可启动 Node-RED
六、（可选）将 Node-RED 作为后台服务运行 你可以使用如下工具实现后台服务：
pm2（推荐）：适用于 Node.</description></item><item><title>Home Assistant Packages</title><link>https://qfsyso.github.io/posts/home-assistant-packages/</link><pubDate>Mon, 24 Mar 2025 20:21:03 +0800</pubDate><guid>https://qfsyso.github.io/posts/home-assistant-packages/</guid><description>在 Home Assistant 中，可以使用 packages 机制来封装 switch 组件，这样可以更好地管理的配置文件。可以创建一个 custom_switch.yaml 文件，并在 configuration.yaml 中引入它。
步骤 1：创建 custom_switch.yaml 在 packages 目录下创建 custom_switch.yaml，并将 switch 配置写入其中：
switch: - platform: template switches: custom_switch: friendly_name: &amp;#34;sw111&amp;#34; unique_id: &amp;#34;custom_event_switch_1&amp;#34; turn_on: - event: aaa event_data: switch: &amp;#34;switch_1&amp;#34; state: &amp;#34;on&amp;#34; turn_off: - event: aaa event_data: switch: &amp;#34;switch_1&amp;#34; state: &amp;#34;off&amp;#34; 步骤 2：修改 configuration.yaml 在 configuration.yaml 文件中引入 packages，确保 homeassistant: 下包含 packages 配置：
homeassistant: packages: !include_dir_merge_named packages 这样，packages 目录下的所有 YAML 文件都会自动被加载，包括 custom_switch.yaml。
步骤 3：重启 Home Assistant 保存文件后，重启 Home Assistant 以使配置生效。</description></item></channel></rss>