<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Emgu on MLOG</title>
    <link>http://localhost:1313/tags/emgu/</link>
    <description>Recent content in Emgu on MLOG</description>
    <generator>Hugo -- 0.145.0</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 03 Dec 2024 01:15:38 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/emgu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>cashrp opencv</title>
      <link>http://localhost:1313/posts/cashrp-opencv/</link>
      <pubDate>Tue, 03 Dec 2024 01:15:38 +0000</pubDate>
      <guid>http://localhost:1313/posts/cashrp-opencv/</guid>
      <description>&lt;h1 id=&#34;emgu-cv进行基本的人脸检测&#34;&gt;Emgu CV进行基本的人脸检测。&lt;/h1&gt;
&lt;p&gt;人脸检测是指定位图像中的人脸位置，而人脸识别是指确认或验证这些脸孔的身份。为了实现人脸识别，需要训练一个模型，或者使用预训练的模型。&lt;/p&gt;
&lt;h1 id=&#34;安装-emgu-cv&#34;&gt;安装 Emgu CV&lt;/h1&gt;
&lt;p&gt;首先，需要通过NuGet安装Emgu CV包。可以通过Visual Studio的NuGet包管理器来安装：&lt;/p&gt;
&lt;p&gt;打开的C#项目。
右键点击解决方案资源管理器中的项目名称，选择“管理NuGet程序包”。&lt;/p&gt;
&lt;h2 id=&#34;搜索并安装emgucv和emgucvruntimewindows&#34;&gt;搜索并安装Emgu.CV和Emgu.CV.runtime.windows。&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-csharp&#34; data-lang=&#34;csharp&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 加载人脸检测分类器&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        CascadeClassifier faceCascade = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; CascadeClassifier(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;haarcascade_frontalface_default.xml&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 读取输入图像&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Image&amp;lt;Bgr, &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;&amp;gt; inputImage = &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Image&amp;lt;Bgr, &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;&amp;gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;face.jpg&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 转换为灰度图像，因为人脸检测通常在灰度图像上进行&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Image&amp;lt;Gray, &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;&amp;gt; grayImage = inputImage.Convert&amp;lt;Gray, &lt;span style=&#34;color:#66d9ef&#34;&gt;byte&lt;/span&gt;&amp;gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 进行人脸检测&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Rectangle[] faces = faceCascade.DetectMultiScale(grayImage, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, Size.Empty);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 在检测到的人脸周围绘制矩形框&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; (Rectangle face &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; faces)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            inputImage.Draw(face, &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt; Bgr(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;255&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// 保存标记后的图像为output.jpg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        inputImage.Save(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;output.jpg&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Console.WriteLine(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;save~output.jpg&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;xml来自 &lt;a href=&#34;https://github.com/opencv/opencv/tree/master/data/haarcascades&#34;&gt;https://github.com/opencv/opencv/tree/master/data/haarcascades&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;runtime&#34;&gt;runtime&lt;/h2&gt;
&lt;p&gt;如果没有 Emgu.CV.runtime.windows  则会加载不了xml&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
