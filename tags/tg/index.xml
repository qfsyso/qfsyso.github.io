<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>TG on MLOG</title><link>https://qfsyso.github.io/tags/tg/</link><description>Recent content in TG on MLOG</description><generator>Hugo -- 0.126.3</generator><language>zh-CN</language><lastBuildDate>Tue, 26 Aug 2025 22:55:49 +0800</lastBuildDate><atom:link href="https://qfsyso.github.io/tags/tg/index.xml" rel="self" type="application/rss+xml"/><item><title>Push TG Bot</title><link>https://qfsyso.github.io/posts/push-tg-bot/</link><pubDate>Tue, 26 Aug 2025 22:55:49 +0800</pubDate><guid>https://qfsyso.github.io/posts/push-tg-bot/</guid><description>Push TG Bot Node.js 写一个 API，结合 Telegram Bot，可以通过 API 推送消息。 使用 Express 创建 API，利用 Telegram Bot API 发送消息。
创建 TG 机器人 1.打开 TG，搜索 BotFather。 2.发送 /newbot ，按步骤创建一个新机器人。 3.创建完成后会得到一个 Bot Token，例如: 123456789:ABCDefGhIJKlmnoPQRstuVWXyz
初始化 mkdir telegram-push-api cd telegram-push-api npm init -y npm install express axios body-parser 核心代码 const express = require(&amp;#39;express&amp;#39;); const axios = require(&amp;#39;axios&amp;#39;); const bodyParser = require(&amp;#39;body-parser&amp;#39;); const app = express(); app.use(bodyParser.json()); // API: POST /api/push/:bottoken app.post(&amp;#39;/api/push/:bottoken&amp;#39;, async (req, res) =&amp;gt; { const botToken = req.</description></item><item><title>Node TG FileBot</title><link>https://qfsyso.github.io/posts/node-tg-filebot/</link><pubDate>Tue, 26 Aug 2025 22:51:47 +0800</pubDate><guid>https://qfsyso.github.io/posts/node-tg-filebot/</guid><description>Node.js TG 文件管理机器人，支持分类存储、分页浏览、搜索、下载、删除文件，同时支持图片缩略图预览和服务器本地下载。
功能 文件分类管理：支持用户自定义分类。
文件上传自动保存：支持文档、图片、视频，并记录上传用户和分类。
分页查看文件列表：可分页显示最近上传的文件。
图片缩略图：在分页列表中显示图片缩略图。
文件搜索：按文件名关键字搜索文件。
获取文件：支持发送文件回 Telegram。
删除文件：支持单个文件删除，带确认机制。
下载到本地：将文件下载到服务器本地，支持重试和错误提示。
命令： /start # 欢迎信息和操作提示 /setcategory # 设置文件分类 /myfiles # 查看最近 10 条文件 /myfilelist [页码] # 分页显示文件列表 /search 关键字 # 搜索文件 /getfile id # 获取文件到 Telegram /delete id # 删除文件
按钮操作： 分类选择：在 /setcategory 后点击按钮设置分类。
删除文件：点击“删除”按钮，带确认操作。
下载文件：点击“下载本地”按钮，将文件下载到服务器本地。
分页：点击上一页/下一页翻页。
文件存储 默认本地存储目录：./files/分类名/文件名
支持自动创建分类目录。
图片会在分页列表显示缩略图。
错误处理和日志
文件下载支持 3 次重试，失败会输出控制台日志。
用户端收到友好提示，不会导致 bot 崩掉。
依赖 node-telegram-bot-api sqlite3 axios Node.js &amp;gt;= 16 项目目录结构 bot.js # 主程序 db.</description></item></channel></rss>