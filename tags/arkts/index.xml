<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>ArkTS on MLOG</title><link>https://qfsyso.github.io/tags/arkts/</link><description>Recent content in ArkTS on MLOG</description><generator>Hugo -- 0.126.3</generator><language>zh-CN</language><lastBuildDate>Tue, 09 Sep 2025 01:18:48 +0800</lastBuildDate><atom:link href="https://qfsyso.github.io/tags/arkts/index.xml" rel="self" type="application/rss+xml"/><item><title>HarmonyOS TaskApp</title><link>https://qfsyso.github.io/posts/harmonyos-taskapp/</link><pubDate>Tue, 09 Sep 2025 01:18:48 +0800</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-taskapp/</guid><description>目录结构 📁 项目结构
entry/src/main/ets/ ├── interface/ │ └── TaskDataInterface.ets # 类型接口定义 ├── model/ │ └── TaskModel.ets # 任务数据模型 ├── service/ │ ├── TaskService.ets # 任务业务逻辑 │ ├── StorageService.ets # 本地存储服务 │ └── DataManager.ets # 数据管理器 ├── utils/ │ └── StorageUtils.ets # 存储工具类 └── pages/ ├── Index.ets # 应用入口 ├── MainPage.ets # 主页面 ├── TaskListPage.ets # 任务列表 ├── AddTaskPage.ets # 添加任务 └── EditTaskPage.ets # 编辑任务 🔧 技术特性 开发平台: HarmonyOS 5.0.5 (API 17) 开发语言: ArkTS 架构模式: MVC + 服务层 类型安全: 完整的TypeScript类型定义 数据存储: HarmonyOS Preferences API UI框架: ArkUI 初始版本 ✅ 时间任务管理: 创建和管理基于时间的任务 ✅ 存钱任务管理: 创建和管理存钱目标任务 ✅ 进度跟踪: 实时计算和显示任务进度 ✅ 状态管理: 自动判断任务状态（进行中/已完成/已过期） ✅ 用户界面: 现代化的Material Design风格界面 ✅ 导航系统: 底部导航栏，分离列表和添加功能 ✅ 任务操作: 完整的增删改查功能 ✅ 响应式设计: 适配不同屏幕尺寸</description></item><item><title>HarmonyOS SDK17 Timer</title><link>https://qfsyso.github.io/posts/harmonyos-sdk17-timer/</link><pubDate>Sun, 07 Sep 2025 11:22:11 +0800</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-sdk17-timer/</guid><description>targetSdkVersion HarmonyOS 5.0.5(API 17)
Timer @Entry @Component struct Index { @State currentTime: string = &amp;#39;&amp;#39;; @State minutes: number = 0; @State seconds: number = 0; @State totalSeconds: number = 0; @State remainingSeconds: number = 0; @State isRunning: boolean = false; @State isPaused: boolean = false; @State isFinished: boolean = false; private timer: number = -1; private clockTimer: number = -1; aboutToAppear() { this.updateCurrentTime(); this.clockTimer = setInterval(() =&amp;gt; { this.updateCurrentTime(); }, 1000); } aboutToDisappear() { if (this.</description></item><item><title>HarmonyOS Interface Router ArkTS ArkUI</title><link>https://qfsyso.github.io/posts/harmonyos-interface-router-arkts-arkui/</link><pubDate>Thu, 23 May 2024 21:49:44 +0000</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-interface-router-arkts-arkui/</guid><description>🎬️create @Component export default struct TitleBar { build(){ Row(){ Text(&amp;#39;transition&amp;#39;) .fontSize(&amp;#39;30fp&amp;#39;) .fontColor(Color.White) } .width(&amp;#39;100%&amp;#39;) .height(&amp;#39;8%&amp;#39;) .backgroundColor(&amp;#39;#4169E1&amp;#39;) .padding({left:10}) } } 🎞️interface export interface IList{ title:string; url :string; } @State listData:IList[]=[ // @State listData:Array&amp;lt;IList&amp;gt;=[ { title:&amp;#39;in&amp;#39;, url:&amp;#39;pages/home1&amp;#39; }, { title:&amp;#39;scale&amp;#39;, url:&amp;#39;pages/home2&amp;#39; }, { title:&amp;#39;small&amp;#39;, url:&amp;#39;pages/home3&amp;#39; }, { title:&amp;#39;in&amp;#39;, url:&amp;#39;&amp;#39; } ] 💡foreach ForEach(this.listData,( item: IList,index?:number)=&amp;gt;{ //listitem Button({type:ButtonType.Capsule}){ Text(item.title) .fontSize(&amp;#39;35fp&amp;#39;) .fontColor(Color.White) } //... }) 🔦router import router from &amp;#39;@ohos.router&amp;#39; 📼mainpage &amp;#34;pages/home1&amp;#34; 📹️onclick .onClick(()=&amp;gt;{ //router router.</description></item><item><title>HarmonyOS Study ArkTS</title><link>https://qfsyso.github.io/posts/harmonyos-study-arkts/</link><pubDate>Sun, 21 Apr 2024 13:00:43 +0000</pubDate><guid>https://qfsyso.github.io/posts/harmonyos-study-arkts/</guid><description>💡 环境搭建 HarmonyOS开发环境搭建
DevEco Studio安装 https://developer.huawei.com/consumer/cn/deveco-studio/
​
🚀安装nodejs ​
🤵安装ohpm ​
🍔安装SDK ​
​
💥Emulator安装 ​
Q:The graphic card OpenGL version is too old for Previewer to work..
解决方法分两步：
1、下载enGL库：https://github.com/pal1000/mesa-dist-win/releases/download/23.1.1/mesa3d-23.1.1-release-msvc.7z
2、解压下载的zip文件,双击执行systemwidedeploy.cmd文件，然后按任意键，出现一个菜单，选择1，然后开始安装OpenGL驱动，出现complete 后关闭终端，重新运行程序即可生效。
🌶️新建ArkTs项目 ​
​
​
entry：HarmonyOS工程模块，编译构建生成一个HAP包。
src &amp;gt; main &amp;gt; ets：用于存放ets源码。 src &amp;gt; main &amp;gt; ets &amp;gt; MainAbility：应用/服务的入口。 src &amp;gt; main &amp;gt; ets &amp;gt; MainAbility &amp;gt; pages：MainAbility包含的页面。 src &amp;gt; main &amp;gt; ets &amp;gt; MainAbility &amp;gt; pages &amp;gt; index.ets：pages列表中的第一个页面，即应用的首页入口。 src &amp;gt; main &amp;gt; ets &amp;gt; MainAbility &amp;gt; app.</description></item></channel></rss>