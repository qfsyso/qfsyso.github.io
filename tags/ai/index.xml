<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>AI on MLOG</title><link>https://qfsyso.github.io/tags/ai/</link><description>Recent content in AI on MLOG</description><generator>Hugo -- 0.126.3</generator><language>zh-CN</language><lastBuildDate>Tue, 25 Mar 2025 21:47:55 +0800</lastBuildDate><atom:link href="https://qfsyso.github.io/tags/ai/index.xml" rel="self" type="application/rss+xml"/><item><title>AI Prompt</title><link>https://qfsyso.github.io/posts/ai-prompt/</link><pubDate>Tue, 25 Mar 2025 21:47:55 +0800</pubDate><guid>https://qfsyso.github.io/posts/ai-prompt/</guid><description>代码审查助手指南 { &amp;#34;title&amp;#34;: &amp;#34;C#代码审查助手指南&amp;#34;, &amp;#34;language&amp;#34;: &amp;#34;zh&amp;#34;, &amp;#34;content&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;section&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;核心思考模式&amp;#34;, &amp;#34;content&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;paragraph&amp;#34;, &amp;#34;text&amp;#34;: &amp;#34;在代码审查之前和期间，您必须进行多维度的深度思考：&amp;#34; }, { &amp;#34;type&amp;#34;: &amp;#34;subsection&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;基础思考模式&amp;#34;, &amp;#34;content&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;list&amp;#34;, &amp;#34;items&amp;#34;: [ &amp;#34;系统思考：从 C# 代码在整个系统架构中的角色和影响进行审查。&amp;#34;, &amp;#34;辩证思考：权衡代码方案的优缺点，例如性能与可读性、简洁与完整性。&amp;#34;, &amp;#34;创造性思考：跳出常规思维模式，寻找更优雅、高效的 C# 代码实现方式。&amp;#34;, &amp;#34;批判性思考：多角度验证代码的正确性、安全性、可维护性和可扩展性。&amp;#34; ] } ] }, { &amp;#34;type&amp;#34;: &amp;#34;subsection&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;思考平衡&amp;#34;, &amp;#34;content&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;list&amp;#34;, &amp;#34;items&amp;#34;: [ &amp;#34;分析与直觉的平衡：既要深入分析代码细节，也要运用经验直觉快速识别潜在问题。&amp;#34;, &amp;#34;细节检查与全局视角的平衡：既要关注代码的每一行逻辑，也要从整体架构角度评估代码质量。&amp;#34;, &amp;#34;理论理解与实践应用的平衡：将 C# 理论知识应用于代码审查实践，同时关注实际项目中的最佳实践。&amp;#34;, &amp;#34;深度思考与快速推进的平衡：在保证审查深度的同时，也要考虑审查效率，及时给出反馈。&amp;#34;, &amp;#34;复杂性与清晰度的平衡：在复杂的技术方案中，保持审查意见的清晰和易于理解。&amp;#34; ] } ] }, { &amp;#34;type&amp;#34;: &amp;#34;subsection&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;分析深度控制&amp;#34;, &amp;#34;content&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;list&amp;#34;, &amp;#34;items&amp;#34;: [ &amp;#34;对于复杂的 C# 代码逻辑和架构设计，进行深入分析。&amp;#34;, &amp;#34;对于简单的代码风格和格式问题，保持简洁高效。&amp;#34;, &amp;#34;确保分析深度与代码审查的重要性和风险级别相匹配。&amp;#34;, &amp;#34;在代码审查的严谨性和实际项目的时间限制之间找到平衡。&amp;#34; ] } ] }, { &amp;#34;type&amp;#34;: &amp;#34;subsection&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;目标聚焦&amp;#34;, &amp;#34;content&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;list&amp;#34;, &amp;#34;items&amp;#34;: [ &amp;#34;始终与代码变更的原始需求和目标保持清晰的连接。&amp;#34;, &amp;#34;引导发散性思考回归到代码审查的核心目标：提升代码质量。&amp;#34;, &amp;#34;确保相关的技术探索服务于提升 C# 代码质量和系统稳定性的核心目标。&amp;#34;, &amp;#34;在开放性探索和目标导向之间取得平衡，既鼓励创新，也确保审查效率。&amp;#34; ] } ] } ] }, { &amp;#34;type&amp;#34;: &amp;#34;section&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;技术能力&amp;#34;, &amp;#34;content&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;subsection&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;核心 компетен&amp;#34;, &amp;#34;content&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;list&amp;#34;, &amp;#34;items&amp;#34;: [ &amp;#34;系统的 C# 技术分析思维，能够从语言特性、框架应用等多维度进行代码审查。&amp;#34;, &amp;#34;强大的逻辑分析和推理能力，能够深入理解 C# 代码逻辑，识别潜在缺陷。&amp;#34;, &amp;#34;严格的答案验证机制，确保代码审查意见的准确性和可靠性。&amp;#34;, &amp;#34;全面的 C# 开发经验，熟悉 C# 生态和常用工具，能够进行高效的代码审查。&amp;#34; ] } ] }, { &amp;#34;type&amp;#34;: &amp;#34;subsection&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;自适应分析框架&amp;#34;, &amp;#34;content&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;paragraph&amp;#34;, &amp;#34;text&amp;#34;: &amp;#34;根据以下因素调整 C# 代码审查的分析深度：&amp;#34; }, { &amp;#34;type&amp;#34;: &amp;#34;list&amp;#34;, &amp;#34;items&amp;#34;: [ &amp;#34;C# 代码的技术复杂性，例如并发编程、反射、泛型等。&amp;#34;, &amp;#34;时间限制，例如紧急修复的代码审查需要快速反馈。&amp;#34;, &amp;#34;已有的技术信息，例如代码变更描述、设计文档、测试用例等。&amp;#34;, &amp;#34;代码提交者的具体需求，例如侧重性能优化、安全漏洞检查或代码风格统一。&amp;#34; ] } ] }, { &amp;#34;type&amp;#34;: &amp;#34;subsection&amp;#34;, &amp;#34;title&amp;#34;: &amp;#34;审查流程&amp;#34;, &amp;#34;content&amp;#34;: [ { &amp;#34;type&amp;#34;: &amp;#34;list&amp;#34;, &amp;#34;items&amp;#34;: [ &amp;#34;**1.</description></item><item><title>AI TTS pyVideoTrans</title><link>https://qfsyso.github.io/posts/ai-tts-pyvideotrans/</link><pubDate>Sun, 16 Mar 2025 21:53:40 +0000</pubDate><guid>https://qfsyso.github.io/posts/ai-tts-pyvideotrans/</guid><description>pyVideoTrans开源视频翻译 Translate the video from one language to another and add dubbing. 将视频从一种语言翻译为另一种语言，同时支持语音识别转录、语音合成、字幕翻译。
百度网盘下载地址: https://pan.baidu.com/s/1AFcVVL9n5TfpgiQPfOMPiw?pwd=817i GitHub地址: https://github.com/jianchang512/pyvideotrans/releases/download/v3.64/win-PatchUpdate-3.65.7z
1.选择需要转译的视频 2.选择翻译渠道 选择免费的翻译渠道即可
也可以选择部署好的模型 如 ：本地qwen:7b模型 或 ds
3.选择配音渠道 如 印度语短视频转译 则选择印度语
这里选择 Elevenlabs.io的API 选择后要在顶部菜单输入API的key
TTS设置 -&amp;gt; ElevenLabs.io 输入 key 注册有送免费的额度 https://elevenlabs.io/ 年付便宜2两个月
选择音色，可以试听 选择嵌入字幕 软字幕（双语） 保留背景音
4.选择 语音识别 语音识别模型 从 tiny 到 base -&amp;gt;small -&amp;gt; medium -&amp;gt; large-v3 模型，识别效果越来越好，但模型体积越来越大，识别速度越来越慢，需要更多CPU/内存/GPU资源。默认使用tiny模型，如果想要更好的效果，请使用更大模型 .en 后缀模型和 distil 开头的模型只用于识别英文发音视频
根据需要选择
5.点击 开始 处理视频 6.调整 音色 根据原视频男女声调整音色 ，男声选择男的音色 音色</description></item><item><title>llama-3.3-70b-versatile</title><link>https://qfsyso.github.io/posts/llama-3.3-70b-versatile/</link><pubDate>Tue, 10 Dec 2024 22:32:02 +0000</pubDate><guid>https://qfsyso.github.io/posts/llama-3.3-70b-versatile/</guid><description>llama-3.3-70b-versatile Groq API 免费使用教程 第一步：获取 API 访问 https://console.groq.com/ 完成注册并申请 API -&amp;gt; googlemail 保存获得的 API 密钥 第二步：配置 NextChat 打开 https://app.nextchat.dev/ https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web 在左侧设置中填入： 设置-&amp;gt;模型服务商-&amp;gt;Google 设置-&amp;gt;自定义接口
模型(model) llama-3.3-70b-versatile 接口地址：https://api.groq.com/openai/ API Key：填入之前获取的密钥 自定义模型：llama-3.3-70b-versatile 主要优势 响应速度：200 Token/秒 性能表现：接近 GPT-4.0 水平 完全免费使用 使用限制 每分钟限额：6000 Token 每日 API 调用：14000 次 足够普通用户日常使用 gsk_U2MI0vooKS4JyCtmNMLHWGdyxxxfqo
提问：你是什么大模型 回答： 我是人工智能模型，特别是一种大型语言模型。我的主要功能是理解和生成类似人类的文本。我的训练数据包括了大量的文本信息，这使我能够学习语言的模式和结构，并根据这个学习生成类似人类的回答。 我的能力包括但不限于： 回答问题：我可以根据我的训练数据回答广泛的题目，从科学和历史到娱乐和文化。 生成文本：我可以根据给定的提示或主题生成文本，包括文章、故事、诗歌等。 翻译：我可以进行语言之间的翻译，例如从英语翻译到西班牙语、法语、德语等。 摘要：我可以将长篇文本摘要为简短的摘要，帮助用户快速理解主要内容。 对话：我可以与用户进行对话，回答问题，提供信息，甚至参与辩论。 我的优势在于能够快速处理和生成大量信息，但是我的能力也受到训练数据的限制。因此，我可能无法总是提供完全准确或最新的信息。然而，我会尽力提供最好的答案和帮助。</description></item><item><title>stable diffusion</title><link>https://qfsyso.github.io/posts/stable-diffusion/</link><pubDate>Tue, 13 Aug 2024 21:22:29 +0000</pubDate><guid>https://qfsyso.github.io/posts/stable-diffusion/</guid><description>背景知识 部署Stable Diffusion，内置模型库+常用插件+ControlNet。
这是一项接近零基础的教程，其中并不会包含复杂的概念或者深奥的算法。换句话说，只要你稍有计算机基础，了解如何敲入命令，知道怎么使用浏览器打开网页，您就能很轻松的完成这个实验。
AI生成内容的形式相当丰富，除了文字外，还可以进行绘画、作曲、演唱、编剧、设计等。最近热度非常高的Text to Image就是AI加持下非常时髦的一种图片创造方式。看看下面这些图片，你一定很难想象它们都是AI生成的吧。
许多人可能觉得，使用AIGC有很高的门槛，普通人是很难入门的。其实不然，随着AI技术的快速发展以及众多开源项目的诞生，我们每个人都可以很轻松且廉价的使用到AIGC。谁能想到，在2018 年，人工智能生成的画作在佳士得拍卖价还高达43.25万美元，而时隔才数年，让AI为我们创作绘画已经成了人人触手可及的事情。
在这些开源项目中，Stable Diffusion无疑是优秀生之一。Stable Diffusion是一种扩散模型（Diffusion Model）的变体，称为“潜在扩散模型”（Latent Diffusion Model），由CompVis、Stability AI和LAION的研究人员和工程师创建。
它使用来自LAION-5B数据库子集的图像进行训练。使用这个模型，可以生成包括人脸在内的任何图像，因为有开源的预训练模型，所以我们也可以在自己的机器上运行它。Stable Diffusion能够根据我们提供的一些提示词以及可以调整的部分参数，通过模型计算生成一张不错的图片。
函数计算FC
函数计算（Function Compute）是一个事件驱动的全托管 Serverless 计算服务，您无需管理服务器等基础设施，只需编写代码并上传，函数计算会为您准备好计算资源，并以弹性、可靠的方式运行代码。
SD1.5 动漫风格 真人风格 轻量版 TensorRT 艺术字
提示词就是生成图片的依据，既可以是描述需要生成内容的词，例如girl, sunset, forest等； 也可以是用于是描述图像属性的词，例如best quality, beautiful, masterpiece等。我们甚至可以通过提示词选择图片生成的视角、光线、画风；人物的姿势、着装、表情、背景的内容等。
建议加上画风描述词，让您的图片更加美观，如：Cyberpunk（赛博朋克），shinkai makoto（新海诚），Ghibli Studio（吉卜力），Paul Gauguin（梵高）等等
SD提示词 qwen 你是一个优秀的导演和Stable Difusion专家。接下来我们要共同完成一部电视剧的AI创作，请你根据我给你的场景，尽可能详细地描述场景的画面，并给出制作这个场累的Stable Difusion 英语提示词，所有提示词中都要加上“画面比例16:9,超写实，高质量，&amp;ldquo;的英语，场景描述不少于200字，提示词不少于30个单词。如果你明白了，请回复“明白&amp;rdquo;，然后我将开始发给你场景。场景一:一个12岁的少年百里东君在一棵桃花树上躺着闭目养神，手上拿着一个白玉酒杯，穿着浅蓝色的长袍，带一点点花纹样式，腰间佩着长剑，阳光透过树叶酒在他的脸上，远，落雪飞，桃花盛开，显示小河，远处的凉亭、茅屋、草坪。
prompt: Prompt for Stable Diffusion: &amp;ldquo;Scene ratio 16:9, hyper-realistic, high-quality. A 12-year-old boy in ancient Chinese clothing, wearing a light blue robe with intricate patterns, lying on a branch of a peach blossom tree.</description></item><item><title>ollama gpt qwen gemma2 deepseek loacl AI</title><link>https://qfsyso.github.io/posts/ollama-gpt-qwen-gemma2-deepseek-loacl-ai/</link><pubDate>Fri, 26 Jul 2024 23:33:08 +0000</pubDate><guid>https://qfsyso.github.io/posts/ollama-gpt-qwen-gemma2-deepseek-loacl-ai/</guid><description>https://ollama.com/ ollama
https://ollama.com/library models
ollama run qwen2 send a message ollama run gemma2 https://github.com/open-webui/open-webui webui
docker run -d -p 3000:8080 --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:main N卡 gpu
docker run -d -p 3000:8080 --gpus all --add-host=host.docker.internal:host-gateway -v open-webui:/app/backend/data --name open-webui --restart always ghcr.io/open-webui/open-webui:cuda http://localhost:3000/
https://ollama.com/library/deepseek-coder-v2 deepseek-coder-v2 ~~ codeqwen sqlcoder
curl -X POST http://localhost:11434/api/generate -d &amp;lsquo;{ &amp;ldquo;model&amp;rdquo;: &amp;ldquo;llama2-chinese:7b-chat-q4_0&amp;rdquo;, &amp;ldquo;prompt&amp;rdquo;:&amp;ldquo;为什么天空是蓝色的&amp;rdquo; }&amp;rsquo;
https://docs.openwebui.com/</description></item></channel></rss>