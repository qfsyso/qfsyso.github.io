<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>WebAPI on MLOG</title><link>https://qfsyso.github.io/tags/webapi/</link><description>Recent content in WebAPI on MLOG</description><generator>Hugo -- 0.126.3</generator><language>zh-CN</language><lastBuildDate>Sat, 09 Aug 2025 02:24:24 +0800</lastBuildDate><atom:link href="https://qfsyso.github.io/tags/webapi/index.xml" rel="self" type="application/rss+xml"/><item><title>WAV STT</title><link>https://qfsyso.github.io/posts/wav-stt/</link><pubDate>Sat, 09 Aug 2025 02:24:24 +0800</pubDate><guid>https://qfsyso.github.io/posts/wav-stt/</guid><description>WAV STT Python Flask 框架
SQLite 做存储
支持批量上传音频文件
后端调用开源 STT 库
支持音频回放和文本搜索
/app ├── app.py # Flask 后端 ├── templates/ │ └── index.html # 前端页面 ├── static/ │ └── audio/ # 上传音频存储目录（Docker 内） ├── requirements.txt # 依赖 ├── Dockerfile └── stt_utils.py # STT 相关工具函数 后端核心功能 /：首页，返回上传页面
/upload：接受多文件上传，保存音频，调用 STT 转文本，保存结果进 SQLite
/audio/：提供音频文件访问，前端可回放
/search：文本搜索接口，返回匹配记录
SQLite 数据库保存：字段 id, filename, upload_time, transcript
Docker requirements.txt
flask whisper openai-whisper Code app.py
import os import sqlite3 from datetime import datetime from flask import Flask, request, render_template, send_from_directory, jsonify import whisper app = Flask(**name**) app.</description></item><item><title>Vosk STT</title><link>https://qfsyso.github.io/posts/vosk-stt/</link><pubDate>Thu, 17 Jul 2025 21:36:01 +0800</pubDate><guid>https://qfsyso.github.io/posts/vosk-stt/</guid><description>Vosk STT 一、准备环境（Debian） sudo apt update sudo apt install -y python3 python3-pip ffmpeg pip3 install --user vosk 二、下载微型中文模型（≈ 40 MB） wget https://alphacephei.com/vosk/models/vosk-model-small-cn-0.22.zip unzip vosk-model-small-cn-0.22.zip 三、保存以下脚本为 listen.py #!/usr/bin/env python3 import sys, json, os from vosk import Model, KaldiRecognizer import wave MAP = { &amp;#34;空调&amp;#34;: 1, &amp;#34;电视&amp;#34;: 2, &amp;#34;风扇&amp;#34;: 3, &amp;#34;卧室灯&amp;#34;: 4, &amp;#34;客厅灯&amp;#34;: 5 } def wav2text(path): wf = wave.open(path, &amp;#34;rb&amp;#34;) if wf.getnchannels() != 1 or wf.getsampwidth() != 2 or wf.getframerate() != 16000: raise ValueError(&amp;#34;音频必须是 16 kHz 16-bit 单声道 WAV&amp;#34;) model = Model(&amp;#34;vosk-model-small-cn-0.</description></item></channel></rss>